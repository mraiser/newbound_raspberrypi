{"data":{"css":"","data":[],"name":"linegraph","js":"var me = this;\nvar ME = $('#'+me.UUID)[0];\n\nme.ready = function(){\n  me.update = drawChart;\n  drawChart(ME.DATA);\n};\n\nfunction drawChart(data){\n  console.log('draw chart');\n  console.log(data);\n  ME.DATA = data;\n  var canvas = $(ME).find('.sensorgraphcanvas')[0];\n  var ctx = me.ctx = canvas.getContext('2d');\n  \n  var sg = $(ME).parent(); \n  var w = sg.width();\n  var h = sg.height();\n  console.log(w+'/'+h);\n  canvas.width = w;\n  canvas.height = h;\n  \n  var L = Math.min(w,h);\n  var offx = (w-L)/2;\n  var offy = (h-L)/2;\n  var stroke1 = 15*L/150;\n  var font1 = 3*L/150;\n  \n  var h1 = offy + L*0.1;\n  var h2 = offy + L*0.8;\n  \n  var w1 = offx + L*0.1;\n  var w2 = offx + L*0.8;\n  \n  var hgap = L*0.05;\n  var wgap = L*0.05;\n  \n  var d = data.datasets[0];\n  \n  ctx.fillStyle = d.backgroundColor;\n  ctx.strokeStyle = d.borderColor;\n  ctx.lineWidth = '3';\n  ctx.fillRect(0, 0, w, h);\n  \n  ctx.beginPath();\n  ctx.moveTo(w1+wgap, h1);\n  ctx.lineTo(w1+wgap, h2);\n  ctx.stroke();\n  \n  ctx.beginPath();\n  ctx.moveTo(w1, h2-hgap);\n  ctx.lineTo(w2, h2-hgap);\n  ctx.stroke();\n  \n  ctx.font = font1+\"px Arial\";\n  ctx.fillStyle = '#fff';\n  ctx.lineWidth = 1;\n  ctx.strokeStyle = '#000';\n  ctx.textAlign = 'center';\n  ctx.shadowColor = 'black';  \n  \n  var xn = d.data.length;\n  var xl = w2-w1;\n  var xli = xl/xn;\n  var min = d.data[0];\n  var max = d.data[0];\n  for (var xi=0;xi<xn;xi++){\n    var w3 = w1+(xi*xli);\n    var t = data.labels[xi];\n    var w4 = ctx.measureText(t).width/4;\n    ctx.save()\n    ctx.translate(w3+wgap+w4,h2+w4-hgap/2);\n    ctx.rotate(Math.PI/4);\n    ctx.strokeText(t,0,0);\n    ctx.fillText(t,0,0);\n    ctx.restore();\n    var v = d.data[xi];\n    if (v>max) max = v;\n    else if (v<min) min = v;\n  }\n  console.log(min+'/'+max);\n  \n  var yn = 10;\n  var step = (max - min)/yn;\n  var yli = (h2-h1-hgap-hgap)/yn;\n  for (var yi=0;yi<=yn;yi++){\n    var h3 = h2-hgap-yli*(yi+1)+font1/2;\n    var t = parseFloat(min + step * yi).toFixed(1);\n    var w3 = w1+ctx.measureText(t).width/2;\n    ctx.strokeText(t,w3,h3);\n    ctx.fillText(t,w3,h3);\n  }\n\n  ctx.fillStyle = d.pointBackgroundColor;\n  ctx.strokeStyle = d.pointBorderColor;\n  ctx.lineWidth = '1';\n  ctx.beginPath();\n  ctx.moveTo(w1+wgap, h2-hgap-(yli*(d.data[0]-min)/step)-yli);\n  \n  for (var xi=0;xi<xn;xi++){\n    var v = d.data[xi];\n    ctx.lineTo(w1+wgap+xi*xli, h2-hgap-(yli*(v-min)/step)-yli);\n  }\n  ctx.stroke();\n  if (d.fill){\n    ctx.lineTo(w1+wgap+xl-xli, h2-hgap);\n    ctx.lineTo(w1+wgap, h2-hgap);\n    ctx.fill();\n  }\n}\n\n$(window).resize(me.ready);","groups":"anonymous","ctl":"vymlsz175aed05486t67","html":"<canvas class='sensorgraphcanvas'/>","three":{"controls":[]},"db":"raspberrypi","desc":""},"readers":["anonymous"],"id":"vymlsz175aed05486t67","time":1604955793892,"addr":"/0:0:0:0:0:0:0:1:34970","username":"admin"}